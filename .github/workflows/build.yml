name: Build and Push to ECR

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-northeast-1
  ECR_APP_REPOSITORY: go_echo_sample_app/app
  ECR_NGINX_REPOSITORY: go_echo_sample_app/nginx

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push App image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -f app/Dockerfile -t $ECR_REGISTRY/$ECR_APP_REPOSITORY:$IMAGE_TAG app
          docker tag $ECR_REGISTRY/$ECR_APP_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_APP_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_APP_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_APP_REPOSITORY:latest

      - name: Build and push Nginx image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -f nginx/Dockerfile -t $ECR_REGISTRY/$ECR_NGINX_REPOSITORY:$IMAGE_TAG nginx
          docker tag $ECR_REGISTRY/$ECR_NGINX_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_NGINX_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_NGINX_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_NGINX_REPOSITORY:latest
